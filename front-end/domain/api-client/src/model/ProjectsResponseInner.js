/**
 * widm-back-end
 * Nation Central University WIDM LAB back-end API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProjectsResponseInner model module.
 * @module model/ProjectsResponseInner
 * @version 1.0.0
 */
class ProjectsResponseInner {
    /**
     * Constructs a new <code>ProjectsResponseInner</code>.
     * @alias module:model/ProjectsResponseInner
     */
    constructor() { 
        
        ProjectsResponseInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProjectsResponseInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProjectsResponseInner} obj Optional instance to populate.
     * @return {module:model/ProjectsResponseInner} The populated <code>ProjectsResponseInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProjectsResponseInner();

            if (data.hasOwnProperty('created_time')) {
                obj['created_time'] = ApiClient.convertToType(data['created_time'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('member_image')) {
                obj['member_image'] = ApiClient.convertToType(data['member_image'], 'String');
            }
            if (data.hasOwnProperty('project_description')) {
                obj['project_description'] = ApiClient.convertToType(data['project_description'], 'String');
            }
            if (data.hasOwnProperty('project_github')) {
                obj['project_github'] = ApiClient.convertToType(data['project_github'], 'String');
            }
            if (data.hasOwnProperty('project_link')) {
                obj['project_link'] = ApiClient.convertToType(data['project_link'], 'String');
            }
            if (data.hasOwnProperty('project_name')) {
                obj['project_name'] = ApiClient.convertToType(data['project_name'], 'String');
            }
            if (data.hasOwnProperty('project_tags')) {
                obj['project_tags'] = ApiClient.convertToType(data['project_tags'], ['String']);
            }
            if (data.hasOwnProperty('updated_time')) {
                obj['updated_time'] = ApiClient.convertToType(data['updated_time'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProjectsResponseInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProjectsResponseInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['created_time'] && !(typeof data['created_time'] === 'string' || data['created_time'] instanceof String)) {
            throw new Error("Expected the field `created_time` to be a primitive type in the JSON string but got " + data['created_time']);
        }
        // ensure the json data is a string
        if (data['member_image'] && !(typeof data['member_image'] === 'string' || data['member_image'] instanceof String)) {
            throw new Error("Expected the field `member_image` to be a primitive type in the JSON string but got " + data['member_image']);
        }
        // ensure the json data is a string
        if (data['project_description'] && !(typeof data['project_description'] === 'string' || data['project_description'] instanceof String)) {
            throw new Error("Expected the field `project_description` to be a primitive type in the JSON string but got " + data['project_description']);
        }
        // ensure the json data is a string
        if (data['project_github'] && !(typeof data['project_github'] === 'string' || data['project_github'] instanceof String)) {
            throw new Error("Expected the field `project_github` to be a primitive type in the JSON string but got " + data['project_github']);
        }
        // ensure the json data is a string
        if (data['project_link'] && !(typeof data['project_link'] === 'string' || data['project_link'] instanceof String)) {
            throw new Error("Expected the field `project_link` to be a primitive type in the JSON string but got " + data['project_link']);
        }
        // ensure the json data is a string
        if (data['project_name'] && !(typeof data['project_name'] === 'string' || data['project_name'] instanceof String)) {
            throw new Error("Expected the field `project_name` to be a primitive type in the JSON string but got " + data['project_name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['project_tags'])) {
            throw new Error("Expected the field `project_tags` to be an array in the JSON data but got " + data['project_tags']);
        }
        // ensure the json data is a string
        if (data['updated_time'] && !(typeof data['updated_time'] === 'string' || data['updated_time'] instanceof String)) {
            throw new Error("Expected the field `updated_time` to be a primitive type in the JSON string but got " + data['updated_time']);
        }

        return true;
    }


}



/**
 * @member {String} created_time
 */
ProjectsResponseInner.prototype['created_time'] = undefined;

/**
 * @member {Number} id
 */
ProjectsResponseInner.prototype['id'] = undefined;

/**
 * @member {String} member_image
 */
ProjectsResponseInner.prototype['member_image'] = undefined;

/**
 * @member {String} project_description
 */
ProjectsResponseInner.prototype['project_description'] = undefined;

/**
 * @member {String} project_github
 */
ProjectsResponseInner.prototype['project_github'] = undefined;

/**
 * @member {String} project_link
 */
ProjectsResponseInner.prototype['project_link'] = undefined;

/**
 * @member {String} project_name
 */
ProjectsResponseInner.prototype['project_name'] = undefined;

/**
 * @member {Array.<String>} project_tags
 */
ProjectsResponseInner.prototype['project_tags'] = undefined;

/**
 * @member {String} updated_time
 */
ProjectsResponseInner.prototype['updated_time'] = undefined;






export default ProjectsResponseInner;

